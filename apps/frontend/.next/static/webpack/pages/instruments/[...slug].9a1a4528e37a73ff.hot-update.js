"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/instruments/[...slug]",{

/***/ "./components/InstrumentData.js":
/*!**************************************!*\
  !*** ./components/InstrumentData.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ InstrumentData; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"../../node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _TopBar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TopBar */ \"./components/TopBar.js\");\n/* harmony import */ var _Groups__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Groups */ \"./components/Groups.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"../../node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react_use_websocket__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-use-websocket */ \"../../node_modules/react-use-websocket/dist/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nclass PV {\n    constructor(pvaddress){\n        this.pvaddress = pvaddress;\n        this.human_readable_name = null;\n        this.severity = null;\n        this.units = null;\n        this.description = null;\n        this.precision = null;\n        this.min = null;\n        this.max = null;\n        this.warn_low = null;\n        this.warn_high = null;\n        this.alarm_low = null;\n        this.alarm_high = null;\n        this.value = null;\n        this.runcontrol_enabled = null;\n        this.visible = null;\n        this.suspend_on_invald = null;\n        this.low_rc = null;\n        this.high_rc = null;\n    }\n}\nclass Instrument {\n    constructor(instrumentName){\n        this.prefix = \"IN:\".concat(instrumentName, \":\");\n        this.topBarMap = new Map(Object.entries({\n            [\"\".concat(this.prefix, \"DAE:RUNSTATE\")]: \"Run state\",\n            [\"\".concat(this.prefix, \"DAE:RUNSTATE_STR\")]: \"Run state STR\",\n            [\"\".concat(this.prefix, \"DAE:RUNNUMBER\")]: \"Run number\",\n            [\"\".concat(this.prefix, \"DAE:STARTTIME\")]: \"Start number\",\n            [\"\".concat(this.prefix, \"DAE:TITLE\")]: \"Title\",\n            [\"\".concat(this.prefix, \"DAE:GOODFRAMES\")]: \"a\",\n            [\"\".concat(this.prefix, \"DAE:GOODFRAMES_PD\")]: \"v\",\n            [\"\".concat(this.prefix, \"DAE:MONITORCOUNTS\")]: \"s\",\n            [\"\".concat(this.prefix, \"DAE:RUNDURATION\")]: \"d\",\n            [\"\".concat(this.prefix, \"DAE:_USERNAME\")]: \"e\",\n            [\"\".concat(this.prefix, \"DAE:RAWFRAMES\")]: \"gh\",\n            [\"\".concat(this.prefix, \"DAE:BEAMCURRENT\")]: \"d\",\n            [\"\".concat(this.prefix, \"DAE:TOTALUAMPS\")]: \"total uamps\",\n            [\"sim://sine\"]: \"sine\"\n        }));\n        this.topBarPVs = new Map();\n        this.groups = [];\n        this.configname = null;\n    }\n}\nlet lastUpdate = \"\";\nfunction InstrumentData() {\n    _s();\n    // set up the different states for the instrument data\n    // const [socket, setSocket] = useState(null);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n    const socketURL = \"ws://ndw1836.isis.cclrc.ac.uk:8080/pvws/pv\";\n    const [instName, setInstName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const { sendJsonMessage, lastJsonMessage } = (0,react_use_websocket__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(socketURL, {\n        shouldReconnect: (closeEvent)=>true\n    });\n    //   // sub to config PV\n    //   // based on config PV reload/set group/block data array and subscriptions\n    //   //permanent subscriptions\n    //   //dae shit\n    //   //blocks\n    //   //adhoc subscriptions\n    //   //dictionary of pv names for blocks etc -> websocket last data\n    const [instrument_name_upper, setInstrument_name_upper] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const CONFIG_DETAILS = \"CS:BLOCKSERVER:GET_CURR_CONFIG_DETAILS\";\n    const [currentInstrument, setCurrentInstrument] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!router.query.slug || !router.query.slug[0]) {\n            return;\n        }\n        setInstrument_name_upper((a)=>{\n            // console.log(router.query.slug);\n            setInstName(router.query.slug[0]);\n            let instrument = new Instrument(router.query.slug[0].toUpperCase());\n            setCurrentInstrument(instrument);\n            let prefix = \"IN:\".concat(router.query.slug[0].toUpperCase(), \":\");\n            sendJsonMessage({\n                type: \"subscribe\",\n                pvs: [\n                    \"\".concat(prefix).concat(CONFIG_DETAILS)\n                ]\n            });\n            sendJsonMessage({\n                type: \"subscribe\",\n                pvs: [\n                    \"\".concat(prefix, \"DAE:RUNSTATE_STR\")\n                ]\n            });\n            for (const pv of instrument.topBarMap.keys()){\n                sendJsonMessage({\n                    type: \"subscribe\",\n                    pvs: [\n                        pv\n                    ]\n                });\n            }\n            return router.query.slug[0].toUpperCase();\n        });\n    }, [\n        router.query.slug,\n        sendJsonMessage\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!lastJsonMessage) {\n            return;\n        }\n        const updatedPV = lastJsonMessage;\n        const updatedPVName = updatedPV.pv;\n        if (updatedPVName == \"\".concat(currentInstrument.prefix).concat(CONFIG_DETAILS) && updatedPV.text != null) {\n            // config change, reset instrument groups\n            if (updatedPV.text == lastUpdate) {\n                //config hasnt actually changed\n                return;\n            }\n            lastUpdate = updatedPV.text;\n            console.log(\"config changed\");\n            let raw = updatedPV.text;\n            console.log(JSON.stringify(raw));\n            fetch(\"http://localhost:3001/pvs/dehex\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: String(raw)\n            }).then((response)=>response.json()).then((response)=>{\n                console.log(response);\n                //parse it here\n                //create PV objects for currentinstrument.groups\n                //subscribe to pvs\n                const ConfigOutput = response;\n                // console.log(response)\n                const blocks = ConfigOutput.blocks;\n                const groups = ConfigOutput.groups;\n                // console.log(groups)\n                // console.log(currentInstrument);\n                // console.log(groups)\n                currentInstrument.groups = [];\n                for (const group of groups){\n                    const groupName = group.name;\n                    const groupBlocks = group.blocks;\n                    // const groupComponent = group.component\n                    currentInstrument.groups.push({\n                        name: groupName,\n                        blocks: []\n                    });\n                    // console.log(currentInstrument)\n                    for (const block of groupBlocks){\n                        // console.log(\"Block:\", block);\n                        const newBlock = blocks.find((b)=>b.name === block);\n                        // console.log(\"NewBlock:\", newBlock);\n                        const completePV = new PV(newBlock.pv);\n                        completePV.human_readable_name = newBlock.name;\n                        completePV.runcontrol_enabled = newBlock.runcontrol;\n                        completePV.low_rc = newBlock.lowlimit;\n                        completePV.high_rc = newBlock.highlimit;\n                        completePV.visible = newBlock.visible;\n                        currentInstrument.groups[currentInstrument.groups.length - 1].blocks.push(completePV);\n                        sendJsonMessage({\n                            type: \"subscribe\",\n                            pvs: [\n                                currentInstrument.prefix + \"CS:SB:\" + completePV.human_readable_name\n                            ]\n                        });\n                    }\n                }\n            });\n        } else {\n            let pvVal;\n            if (updatedPV.text != null) {\n                //string\n                pvVal = updatedPV.text;\n            } else if (updatedPV.value != null) {\n                //anything else\n                pvVal = updatedPV.value;\n            } else {\n                return;\n            }\n            if (currentInstrument.topBarMap.has(updatedPVName)) {\n                // This is a top bar PV\n                const human_readable_name = currentInstrument.topBarMap.get(updatedPVName);\n                currentInstrument.topBarPVs[human_readable_name] = pvVal;\n            } else {\n                //check if in groups\n                // console.log(currentInstrument.groups)\n                // consol\n                for (const group of currentInstrument.groups){\n                    // console.log(group)\n                    for (const block of group.blocks){\n                        // console.log(\"block: \" + block.human_readable_name + \"updatedpvname: \" + updatedPVName )\n                        if (currentInstrument.prefix + \"CS:SB:\" + block.human_readable_name == updatedPVName) {\n                            // console.log(\"got here\")\n                            block.value = pvVal;\n                            const pv = document.getElementById(block.human_readable_name + \"_CIRCLE\");\n                            if (!pv) return;\n                            if (pv.classList.contains(\"text-green-500\")) return;\n                            pv.classList.remove(\"text-transparent\");\n                            pv.classList.add(\"text-green-500\");\n                            setTimeout(()=>{\n                                pv.classList.remove(\"text-green-500\");\n                                pv.classList.add(\"text-transparent\");\n                            }, 2000);\n                        }\n                    }\n                }\n            }\n        }\n    }, [\n        lastJsonMessage\n    ]);\n    if (!instName) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n            children: \"Loading...\"\n        }, void 0, false, {\n            fileName: \"C:\\\\WebDashboard\\\\apps\\\\frontend\\\\components\\\\InstrumentData.js\",\n            lineNumber: 263,\n            columnNumber: 12\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-8 w-full mx-auto max-w-7xl\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_TopBar__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                monitoredPVs: currentInstrument.topBarPVs,\n                instName: instName\n            }, void 0, false, {\n                fileName: \"C:\\\\WebDashboard\\\\apps\\\\frontend\\\\components\\\\InstrumentData.js\",\n                lineNumber: 267,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Groups__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                groupsMap: currentInstrument.groups\n            }, void 0, false, {\n                fileName: \"C:\\\\WebDashboard\\\\apps\\\\frontend\\\\components\\\\InstrumentData.js\",\n                lineNumber: 268,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\WebDashboard\\\\apps\\\\frontend\\\\components\\\\InstrumentData.js\",\n        lineNumber: 266,\n        columnNumber: 5\n    }, this);\n}\n_s(InstrumentData, \"1NRXEyqZH71ntJLHpRHwP9IUUDA=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter,\n        react_use_websocket__WEBPACK_IMPORTED_MODULE_5__[\"default\"]\n    ];\n});\n_c = InstrumentData;\nvar _c;\n$RefreshReg$(_c, \"InstrumentData\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/InstrumentData.js\n"));

/***/ })

});